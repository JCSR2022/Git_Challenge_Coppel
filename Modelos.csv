Nombre_modelo,accuracy_score,precision_score,recall_score,f1_score,roc_auc_score,modelo
LogisticRegression,0.8503333333333334,0.7172503242542153,0.7053571428571429,0.7112540192926046,0.9067381013777353,"Pipeline(steps=[('Transformacion_var',
                 ColumnTransformer(remainder='passthrough',
                                   transformers=[('Quantile',
                                                  QuantileTransformer(n_quantiles=10,
                                                                      random_state=0),
                                                  ['INGRESO']),
                                                 ('MinMax', MinMaxScaler(),
                                                  ['MORAS']),
                                                 ('Ohe_bi ',
                                                  OneHotEncoder(drop='first',
                                                                handle_unknown='ignore'),
                                                  ['SEXO']),
                                                 ('Ohe',
                                                  OneHotEncoder(handle_unknown='ignore'),
                                                  ['ESTADO', 'ESTADOCIVIL']),
                                                 ('Normal', Normalizer(),
                                                  ['MARCACIONES', 'CONTACTOS',
                                                   'M1', 'C1', 'M2', 'C2', 'M3',
                                                   'C3'])])),
                ('Reduccion_var',
                 RFE(estimator=SVC(coef0=1, kernel='linear', probability=True),
                     n_features_to_select=5)),
                ('clasificacion',
                 LogisticRegression(class_weight={0: 0.6854680767724246,
                                                  1: 1.8479408658922913}))])"
KNeighborsClassifier,0.849,0.7342569269521411,0.7066666666666667,0.7201976528721433,0.8786831069313827,"Pipeline(steps=[('BinningProcess',
                 ColumnTransformer(transformers=[('ESTADO_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['ESTADO']))]),
                                                  ['ESTADO']),
                                                 ('INGRESO_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['INGRESO']))]),
                                                  ['INGRESO']),
                                                 ('MORAS_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['MORAS']))]),
                                                  ['MO...
                                                                   BinningProcess(variable_names=['C3']))]),
                                                  ['C3']),
                                                 ('ANTIGUEDAD_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['ANTIGUEDAD']))]),
                                                  ['ANTIGUEDAD']),
                                                 ('EDAD_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['EDAD']))]),
                                                  ['EDAD'])])),
                ('Principal_component_analysis', PCA(n_components=5)),
                ('KNeighborsClassifier', KNeighborsClassifier())])"
 RandomForestClassifier,0.8363333333333334,0.6693440428380187,0.6720430107526881,0.670690811535882,0.8832775084839471,"Pipeline(steps=[('Transformacion_var',
                 ColumnTransformer(transformers=[('ESTADO_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['ESTADO']))]),
                                                  ['ESTADO']),
                                                 ('INGRESO_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['INGRESO']))]),
                                                  ['INGRESO']),
                                                 ('MORAS_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['MORAS']))]),...
                                                 ('ANTIGUEDAD_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['ANTIGUEDAD']))]),
                                                  ['ANTIGUEDAD']),
                                                 ('EDAD_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['EDAD']))]),
                                                  ['EDAD'])])),
                ('Principal_component_analysis', PCA(n_components=5)),
                ('RandomForestClassifier',
                 RandomForestClassifier(min_samples_leaf=2, min_samples_split=5,
                                        n_estimators=12))])"
SGDClassifier,0.843,0.6604938271604939,0.8199233716475096,0.7316239316239317,0.8355367873122528,"Pipeline(steps=[('Transformacion_woe',
                 ColumnTransformer(transformers=[('ESTADO_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['ESTADO']))]),
                                                  ['ESTADO']),
                                                 ('INGRESO_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['INGRESO']))]),
                                                  ['INGRESO']),
                                                 ('MORAS_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['MORAS']))]),...
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['ANTIGUEDAD']))]),
                                                  ['ANTIGUEDAD']),
                                                 ('EDAD_Tr',
                                                  Pipeline(steps=[('columna',
                                                                   BinningProcess(variable_names=['EDAD']))]),
                                                  ['EDAD'])])),
                ('Transformacion_0_1', MinMaxScaler()),
                ('Reduccion_var',
                 SelectKBest(k=5,
                             score_func=<function chi2 at 0x0000005D1AFACD30>)),
                ('classifier',
                 SGDClassifier(alpha=0.01, class_weight={0: 0.2, 1: 0.8}))])"
modelo_compuesto,0.8716666666666667,0.7740693196405648,0.7426108374384236,0.7580138277812696,0.8310860402914237,"VotingClassifier(estimators=[('LogisticRegression',
                              Pipeline(steps=[('Transformacion_var',
                                               ColumnTransformer(remainder='passthrough',
                                                                 transformers=[('Quantile',
                                                                                QuantileTransformer(n_quantiles=10,
                                                                                                    random_state=0),
                                                                                ['INGRESO']),
                                                                               ('MinMax',
                                                                                MinMaxScaler(),
                                                                                ['MORAS']),
                                                                               ('Ohe_bi ',
                                                                                OneHotEncoder(drop='first',
                                                                                              handle_unknown='ignore'),
                                                                                ['SEXO']),
                                                                               ('Ohe',
                                                                                OneHotEncoder(...
                                                                                Pipeline(steps=[('columna',
                                                                                                 BinningProcess(variable_names=['ANTIGUEDAD']))]),
                                                                                ['ANTIGUEDAD']),
                                                                               ('EDAD_Tr',
                                                                                Pipeline(steps=[('columna',
                                                                                                 BinningProcess(variable_names=['EDAD']))]),
                                                                                ['EDAD'])])),
                                              ('Principal_component_analysis',
                                               PCA(n_components=5)),
                                              ('KNeighborsClassifier',
                                               KNeighborsClassifier())]))],
                 voting='soft',
                 weights=[1.0002736040585412, 0.9997263959414587])"
